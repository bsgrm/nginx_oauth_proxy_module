LINUX DEPLOYMENT
----------------
Get this working and proven
Bear in mind the approach here, which expects the openssl library as a prerequisite:
- https://github.com/zmartzone/liboauth2#dependencies

CONFIGURATION TESTS AND VERIFICATION
------------------------------------
Do this carefully with tests, and reduce the choices, eg to restrict the size of the cookie prefix to 32
Then use less dynamic allocation as a result
Arrays for trusted web origins
Use assertions in code

DECRYPTION TESTS
----------------
Ideally run a small tool that does encryption, perhaps developed in Node.js
Use assertions in code

CSRF TESTS
----------
Do this verification in a test driven manner similar to curl tests

ENVIRONMENT
-----------
CLion setup

PEOPLE COMMUNICATION
--------------------
On the OSS channel, tell people this is coming, but not finished yet and raise interesting points:

- Set the scene that customers put 2 plugins in front of APIs and use them from SPAs
  There is a high level angle of a simple experience for customers, along with some low level details from us

- Use of authenticated AES256 meaning if a man in the middle tampers with bytes there is a decryption error and message rejected
  OpenSSL and how best to deal with it from a deployment viewpoint: link to Zmartzone example

- Phantom Token Plugin update for SPAs (eg OPTIONS / response headers)
  https://stackoverflow.com/questions/33672689/javascript-jquery-can%C2%B4t-get-www-authenticate-response-header

- End-to-End error experience for SPAs
  It feels a bit cludgy asking SPAs to read a header for some error responses and not others
  My thoughts are to follow standards but also return a JSON body with a code and message payload

OPEN QUESTIONS
--------------
Review all resources carefully and make a list of any code / build instructions I don't understand